// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: api/audit.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	ActorId       string                 `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ActorEmail    string                 `protobuf:"bytes,3,opt,name=actor_email,json=actorEmail,proto3" json:"actor_email,omitempty"`
	TargetType    string                 `protobuf:"bytes,4,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`
	TargetId      string                 `protobuf:"bytes,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	CompanyId     string                 `protobuf:"bytes,6,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Action        string                 `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"`
	Result        string                 `protobuf:"bytes,8,opt,name=result,proto3" json:"result,omitempty"` // success, failure
	IpAddress     string                 `protobuf:"bytes,9,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	UserAgent     string                 `protobuf:"bytes,10,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,11,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEventRequest) Reset() {
	*x = LogEventRequest{}
	mi := &file_api_audit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEventRequest) ProtoMessage() {}

func (x *LogEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEventRequest.ProtoReflect.Descriptor instead.
func (*LogEventRequest) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{0}
}

func (x *LogEventRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *LogEventRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *LogEventRequest) GetActorEmail() string {
	if x != nil {
		return x.ActorEmail
	}
	return ""
}

func (x *LogEventRequest) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *LogEventRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *LogEventRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *LogEventRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *LogEventRequest) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *LogEventRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *LogEventRequest) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *LogEventRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type LogEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEventResponse) Reset() {
	*x = LogEventResponse{}
	mi := &file_api_audit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEventResponse) ProtoMessage() {}

func (x *LogEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEventResponse.ProtoReflect.Descriptor instead.
func (*LogEventResponse) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{1}
}

func (x *LogEventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *LogEventResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type QueryEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     string                 `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	ActorId       string                 `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	TargetType    string                 `protobuf:"bytes,4,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`
	TargetId      string                 `protobuf:"bytes,5,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Action        string                 `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`
	Result        string                 `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Limit         int32                  `protobuf:"varint,10,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,11,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryEventsRequest) Reset() {
	*x = QueryEventsRequest{}
	mi := &file_api_audit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventsRequest) ProtoMessage() {}

func (x *QueryEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventsRequest.ProtoReflect.Descriptor instead.
func (*QueryEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{2}
}

func (x *QueryEventsRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *QueryEventsRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *QueryEventsRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *QueryEventsRequest) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *QueryEventsRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *QueryEventsRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *QueryEventsRequest) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *QueryEventsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *QueryEventsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *QueryEventsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryEventsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type QueryEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*AuditEvent          `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryEventsResponse) Reset() {
	*x = QueryEventsResponse{}
	mi := &file_api_audit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryEventsResponse) ProtoMessage() {}

func (x *QueryEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryEventsResponse.ProtoReflect.Descriptor instead.
func (*QueryEventsResponse) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{3}
}

func (x *QueryEventsResponse) GetEvents() []*AuditEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *QueryEventsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type UserActivityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CompanyId     string                 `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserActivityRequest) Reset() {
	*x = UserActivityRequest{}
	mi := &file_api_audit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivityRequest) ProtoMessage() {}

func (x *UserActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivityRequest.ProtoReflect.Descriptor instead.
func (*UserActivityRequest) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{4}
}

func (x *UserActivityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserActivityRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *UserActivityRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UserActivityRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UserActivityRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *UserActivityRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type UserActivityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*AuditEvent          `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Summary       *ActivitySummary       `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserActivityResponse) Reset() {
	*x = UserActivityResponse{}
	mi := &file_api_audit_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivityResponse) ProtoMessage() {}

func (x *UserActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivityResponse.ProtoReflect.Descriptor instead.
func (*UserActivityResponse) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{5}
}

func (x *UserActivityResponse) GetEvents() []*AuditEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *UserActivityResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *UserActivityResponse) GetSummary() *ActivitySummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type ComplianceReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     string                 `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	ReportType    string                 `protobuf:"bytes,4,opt,name=report_type,json=reportType,proto3" json:"report_type,omitempty"` // access, changes, security
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComplianceReportRequest) Reset() {
	*x = ComplianceReportRequest{}
	mi := &file_api_audit_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceReportRequest) ProtoMessage() {}

func (x *ComplianceReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceReportRequest.ProtoReflect.Descriptor instead.
func (*ComplianceReportRequest) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{6}
}

func (x *ComplianceReportRequest) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *ComplianceReportRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ComplianceReportRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ComplianceReportRequest) GetReportType() string {
	if x != nil {
		return x.ReportType
	}
	return ""
}

type ComplianceReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportId      string                 `protobuf:"bytes,1,opt,name=report_id,json=reportId,proto3" json:"report_id,omitempty"`
	Report        *ComplianceReport      `protobuf:"bytes,2,opt,name=report,proto3" json:"report,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComplianceReportResponse) Reset() {
	*x = ComplianceReportResponse{}
	mi := &file_api_audit_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceReportResponse) ProtoMessage() {}

func (x *ComplianceReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceReportResponse.ProtoReflect.Descriptor instead.
func (*ComplianceReportResponse) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{7}
}

func (x *ComplianceReportResponse) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *ComplianceReportResponse) GetReport() *ComplianceReport {
	if x != nil {
		return x.Report
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_api_audit_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{8}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_api_audit_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{9}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AuditEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	ActorId       string                 `protobuf:"bytes,3,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	ActorEmail    string                 `protobuf:"bytes,4,opt,name=actor_email,json=actorEmail,proto3" json:"actor_email,omitempty"`
	TargetType    string                 `protobuf:"bytes,5,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`
	TargetId      string                 `protobuf:"bytes,6,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	CompanyId     string                 `protobuf:"bytes,7,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	Action        string                 `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	Result        string                 `protobuf:"bytes,9,opt,name=result,proto3" json:"result,omitempty"`
	IpAddress     string                 `protobuf:"bytes,10,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	UserAgent     string                 `protobuf:"bytes,11,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditEvent) Reset() {
	*x = AuditEvent{}
	mi := &file_api_audit_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvent) ProtoMessage() {}

func (x *AuditEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEvent.ProtoReflect.Descriptor instead.
func (*AuditEvent) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{10}
}

func (x *AuditEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuditEvent) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *AuditEvent) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *AuditEvent) GetActorEmail() string {
	if x != nil {
		return x.ActorEmail
	}
	return ""
}

func (x *AuditEvent) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *AuditEvent) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *AuditEvent) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *AuditEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AuditEvent) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *AuditEvent) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AuditEvent) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *AuditEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AuditEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ActivitySummary struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TotalEvents     int32                  `protobuf:"varint,1,opt,name=total_events,json=totalEvents,proto3" json:"total_events,omitempty"`
	SuccessCount    int32                  `protobuf:"varint,2,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	FailureCount    int32                  `protobuf:"varint,3,opt,name=failure_count,json=failureCount,proto3" json:"failure_count,omitempty"`
	ActionsCount    map[string]int32       `protobuf:"bytes,4,rep,name=actions_count,json=actionsCount,proto3" json:"actions_count,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	EventTypesCount map[string]int32       `protobuf:"bytes,5,rep,name=event_types_count,json=eventTypesCount,proto3" json:"event_types_count,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ActivitySummary) Reset() {
	*x = ActivitySummary{}
	mi := &file_api_audit_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivitySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitySummary) ProtoMessage() {}

func (x *ActivitySummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitySummary.ProtoReflect.Descriptor instead.
func (*ActivitySummary) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{11}
}

func (x *ActivitySummary) GetTotalEvents() int32 {
	if x != nil {
		return x.TotalEvents
	}
	return 0
}

func (x *ActivitySummary) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *ActivitySummary) GetFailureCount() int32 {
	if x != nil {
		return x.FailureCount
	}
	return 0
}

func (x *ActivitySummary) GetActionsCount() map[string]int32 {
	if x != nil {
		return x.ActionsCount
	}
	return nil
}

func (x *ActivitySummary) GetEventTypesCount() map[string]int32 {
	if x != nil {
		return x.EventTypesCount
	}
	return nil
}

type ComplianceReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ReportType    string                 `protobuf:"bytes,1,opt,name=report_type,json=reportType,proto3" json:"report_type,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	TotalEvents   int32                  `protobuf:"varint,4,opt,name=total_events,json=totalEvents,proto3" json:"total_events,omitempty"`
	Metrics       []*ComplianceMetric    `protobuf:"bytes,5,rep,name=metrics,proto3" json:"metrics,omitempty"`
	SampleEvents  []*AuditEvent          `protobuf:"bytes,6,rep,name=sample_events,json=sampleEvents,proto3" json:"sample_events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComplianceReport) Reset() {
	*x = ComplianceReport{}
	mi := &file_api_audit_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceReport) ProtoMessage() {}

func (x *ComplianceReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceReport.ProtoReflect.Descriptor instead.
func (*ComplianceReport) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{12}
}

func (x *ComplianceReport) GetReportType() string {
	if x != nil {
		return x.ReportType
	}
	return ""
}

func (x *ComplianceReport) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ComplianceReport) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ComplianceReport) GetTotalEvents() int32 {
	if x != nil {
		return x.TotalEvents
	}
	return 0
}

func (x *ComplianceReport) GetMetrics() []*ComplianceMetric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *ComplianceReport) GetSampleEvents() []*AuditEvent {
	if x != nil {
		return x.SampleEvents
	}
	return nil
}

type ComplianceMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComplianceMetric) Reset() {
	*x = ComplianceMetric{}
	mi := &file_api_audit_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceMetric) ProtoMessage() {}

func (x *ComplianceMetric) ProtoReflect() protoreflect.Message {
	mi := &file_api_audit_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceMetric.ProtoReflect.Descriptor instead.
func (*ComplianceMetric) Descriptor() ([]byte, []int) {
	return file_api_audit_proto_rawDescGZIP(), []int{13}
}

func (x *ComplianceMetric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComplianceMetric) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ComplianceMetric) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_api_audit_proto protoreflect.FileDescriptor

const file_api_audit_proto_rawDesc = "" +
	"\n" +
	"\x0fapi/audit.proto\x12\baudit.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb9\x03\n" +
	"\x0fLogEventRequest\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x19\n" +
	"\bactor_id\x18\x02 \x01(\tR\aactorId\x12\x1f\n" +
	"\vactor_email\x18\x03 \x01(\tR\n" +
	"actorEmail\x12\x1f\n" +
	"\vtarget_type\x18\x04 \x01(\tR\n" +
	"targetType\x12\x1b\n" +
	"\ttarget_id\x18\x05 \x01(\tR\btargetId\x12\x1d\n" +
	"\n" +
	"company_id\x18\x06 \x01(\tR\tcompanyId\x12\x16\n" +
	"\x06action\x18\a \x01(\tR\x06action\x12\x16\n" +
	"\x06result\x18\b \x01(\tR\x06result\x12\x1d\n" +
	"\n" +
	"ip_address\x18\t \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\n" +
	" \x01(\tR\tuserAgent\x12C\n" +
	"\bmetadata\x18\v \x03(\v2'.audit.v1.LogEventRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"g\n" +
	"\x10LogEventResponse\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xfb\x02\n" +
	"\x12QueryEventsRequest\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\tR\tcompanyId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x19\n" +
	"\bactor_id\x18\x03 \x01(\tR\aactorId\x12\x1f\n" +
	"\vtarget_type\x18\x04 \x01(\tR\n" +
	"targetType\x12\x1b\n" +
	"\ttarget_id\x18\x05 \x01(\tR\btargetId\x12\x16\n" +
	"\x06action\x18\x06 \x01(\tR\x06action\x12\x16\n" +
	"\x06result\x18\a \x01(\tR\x06result\x129\n" +
	"\n" +
	"start_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x14\n" +
	"\x05limit\x18\n" +
	" \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\v \x01(\x05R\x06offset\"d\n" +
	"\x13QueryEventsResponse\x12,\n" +
	"\x06events\x18\x01 \x03(\v2\x14.audit.v1.AuditEventR\x06events\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xed\x01\n" +
	"\x13UserActivityRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"company_id\x18\x02 \x01(\tR\tcompanyId\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x06 \x01(\x05R\x06offset\"\x9a\x01\n" +
	"\x14UserActivityResponse\x12,\n" +
	"\x06events\x18\x01 \x03(\v2\x14.audit.v1.AuditEventR\x06events\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x123\n" +
	"\asummary\x18\x03 \x01(\v2\x19.audit.v1.ActivitySummaryR\asummary\"\xcb\x01\n" +
	"\x17ComplianceReportRequest\x12\x1d\n" +
	"\n" +
	"company_id\x18\x01 \x01(\tR\tcompanyId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1f\n" +
	"\vreport_type\x18\x04 \x01(\tR\n" +
	"reportType\"k\n" +
	"\x18ComplianceReportResponse\x12\x1b\n" +
	"\treport_id\x18\x01 \x01(\tR\breportId\x122\n" +
	"\x06report\x18\x02 \x01(\v2\x1a.audit.v1.ComplianceReportR\x06report\"\x14\n" +
	"\x12HealthCheckRequest\"g\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xf9\x03\n" +
	"\n" +
	"AuditEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x19\n" +
	"\bactor_id\x18\x03 \x01(\tR\aactorId\x12\x1f\n" +
	"\vactor_email\x18\x04 \x01(\tR\n" +
	"actorEmail\x12\x1f\n" +
	"\vtarget_type\x18\x05 \x01(\tR\n" +
	"targetType\x12\x1b\n" +
	"\ttarget_id\x18\x06 \x01(\tR\btargetId\x12\x1d\n" +
	"\n" +
	"company_id\x18\a \x01(\tR\tcompanyId\x12\x16\n" +
	"\x06action\x18\b \x01(\tR\x06action\x12\x16\n" +
	"\x06result\x18\t \x01(\tR\x06result\x12\x1d\n" +
	"\n" +
	"ip_address\x18\n" +
	" \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\v \x01(\tR\tuserAgent\x12>\n" +
	"\bmetadata\x18\f \x03(\v2\".audit.v1.AuditEvent.MetadataEntryR\bmetadata\x128\n" +
	"\ttimestamp\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb1\x03\n" +
	"\x0fActivitySummary\x12!\n" +
	"\ftotal_events\x18\x01 \x01(\x05R\vtotalEvents\x12#\n" +
	"\rsuccess_count\x18\x02 \x01(\x05R\fsuccessCount\x12#\n" +
	"\rfailure_count\x18\x03 \x01(\x05R\ffailureCount\x12P\n" +
	"\ractions_count\x18\x04 \x03(\v2+.audit.v1.ActivitySummary.ActionsCountEntryR\factionsCount\x12Z\n" +
	"\x11event_types_count\x18\x05 \x03(\v2..audit.v1.ActivitySummary.EventTypesCountEntryR\x0feventTypesCount\x1a?\n" +
	"\x11ActionsCountEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1aB\n" +
	"\x14EventTypesCountEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xb9\x02\n" +
	"\x10ComplianceReport\x12\x1f\n" +
	"\vreport_type\x18\x01 \x01(\tR\n" +
	"reportType\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12!\n" +
	"\ftotal_events\x18\x04 \x01(\x05R\vtotalEvents\x124\n" +
	"\ametrics\x18\x05 \x03(\v2\x1a.audit.v1.ComplianceMetricR\ametrics\x129\n" +
	"\rsample_events\x18\x06 \x03(\v2\x14.audit.v1.AuditEventR\fsampleEvents\"^\n" +
	"\x10ComplianceMetric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription2\x99\x03\n" +
	"\fAuditService\x12A\n" +
	"\bLogEvent\x12\x19.audit.v1.LogEventRequest\x1a\x1a.audit.v1.LogEventResponse\x12J\n" +
	"\vQueryEvents\x12\x1c.audit.v1.QueryEventsRequest\x1a\x1d.audit.v1.QueryEventsResponse\x12P\n" +
	"\x0fGetUserActivity\x12\x1d.audit.v1.UserActivityRequest\x1a\x1e.audit.v1.UserActivityResponse\x12\\\n" +
	"\x13GetComplianceReport\x12!.audit.v1.ComplianceReportRequest\x1a\".audit.v1.ComplianceReportResponse\x12J\n" +
	"\vHealthCheck\x12\x1c.audit.v1.HealthCheckRequest\x1a\x1d.audit.v1.HealthCheckResponseB6Z4github.com/taskman/v2/services/audit-service/pkg/apib\x06proto3"

var (
	file_api_audit_proto_rawDescOnce sync.Once
	file_api_audit_proto_rawDescData []byte
)

func file_api_audit_proto_rawDescGZIP() []byte {
	file_api_audit_proto_rawDescOnce.Do(func() {
		file_api_audit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_audit_proto_rawDesc), len(file_api_audit_proto_rawDesc)))
	})
	return file_api_audit_proto_rawDescData
}

var file_api_audit_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_audit_proto_goTypes = []any{
	(*LogEventRequest)(nil),          // 0: audit.v1.LogEventRequest
	(*LogEventResponse)(nil),         // 1: audit.v1.LogEventResponse
	(*QueryEventsRequest)(nil),       // 2: audit.v1.QueryEventsRequest
	(*QueryEventsResponse)(nil),      // 3: audit.v1.QueryEventsResponse
	(*UserActivityRequest)(nil),      // 4: audit.v1.UserActivityRequest
	(*UserActivityResponse)(nil),     // 5: audit.v1.UserActivityResponse
	(*ComplianceReportRequest)(nil),  // 6: audit.v1.ComplianceReportRequest
	(*ComplianceReportResponse)(nil), // 7: audit.v1.ComplianceReportResponse
	(*HealthCheckRequest)(nil),       // 8: audit.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),      // 9: audit.v1.HealthCheckResponse
	(*AuditEvent)(nil),               // 10: audit.v1.AuditEvent
	(*ActivitySummary)(nil),          // 11: audit.v1.ActivitySummary
	(*ComplianceReport)(nil),         // 12: audit.v1.ComplianceReport
	(*ComplianceMetric)(nil),         // 13: audit.v1.ComplianceMetric
	nil,                              // 14: audit.v1.LogEventRequest.MetadataEntry
	nil,                              // 15: audit.v1.AuditEvent.MetadataEntry
	nil,                              // 16: audit.v1.ActivitySummary.ActionsCountEntry
	nil,                              // 17: audit.v1.ActivitySummary.EventTypesCountEntry
	(*timestamppb.Timestamp)(nil),    // 18: google.protobuf.Timestamp
}
var file_api_audit_proto_depIdxs = []int32{
	14, // 0: audit.v1.LogEventRequest.metadata:type_name -> audit.v1.LogEventRequest.MetadataEntry
	18, // 1: audit.v1.LogEventResponse.timestamp:type_name -> google.protobuf.Timestamp
	18, // 2: audit.v1.QueryEventsRequest.start_time:type_name -> google.protobuf.Timestamp
	18, // 3: audit.v1.QueryEventsRequest.end_time:type_name -> google.protobuf.Timestamp
	10, // 4: audit.v1.QueryEventsResponse.events:type_name -> audit.v1.AuditEvent
	18, // 5: audit.v1.UserActivityRequest.start_time:type_name -> google.protobuf.Timestamp
	18, // 6: audit.v1.UserActivityRequest.end_time:type_name -> google.protobuf.Timestamp
	10, // 7: audit.v1.UserActivityResponse.events:type_name -> audit.v1.AuditEvent
	11, // 8: audit.v1.UserActivityResponse.summary:type_name -> audit.v1.ActivitySummary
	18, // 9: audit.v1.ComplianceReportRequest.start_time:type_name -> google.protobuf.Timestamp
	18, // 10: audit.v1.ComplianceReportRequest.end_time:type_name -> google.protobuf.Timestamp
	12, // 11: audit.v1.ComplianceReportResponse.report:type_name -> audit.v1.ComplianceReport
	18, // 12: audit.v1.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	15, // 13: audit.v1.AuditEvent.metadata:type_name -> audit.v1.AuditEvent.MetadataEntry
	18, // 14: audit.v1.AuditEvent.timestamp:type_name -> google.protobuf.Timestamp
	16, // 15: audit.v1.ActivitySummary.actions_count:type_name -> audit.v1.ActivitySummary.ActionsCountEntry
	17, // 16: audit.v1.ActivitySummary.event_types_count:type_name -> audit.v1.ActivitySummary.EventTypesCountEntry
	18, // 17: audit.v1.ComplianceReport.start_time:type_name -> google.protobuf.Timestamp
	18, // 18: audit.v1.ComplianceReport.end_time:type_name -> google.protobuf.Timestamp
	13, // 19: audit.v1.ComplianceReport.metrics:type_name -> audit.v1.ComplianceMetric
	10, // 20: audit.v1.ComplianceReport.sample_events:type_name -> audit.v1.AuditEvent
	0,  // 21: audit.v1.AuditService.LogEvent:input_type -> audit.v1.LogEventRequest
	2,  // 22: audit.v1.AuditService.QueryEvents:input_type -> audit.v1.QueryEventsRequest
	4,  // 23: audit.v1.AuditService.GetUserActivity:input_type -> audit.v1.UserActivityRequest
	6,  // 24: audit.v1.AuditService.GetComplianceReport:input_type -> audit.v1.ComplianceReportRequest
	8,  // 25: audit.v1.AuditService.HealthCheck:input_type -> audit.v1.HealthCheckRequest
	1,  // 26: audit.v1.AuditService.LogEvent:output_type -> audit.v1.LogEventResponse
	3,  // 27: audit.v1.AuditService.QueryEvents:output_type -> audit.v1.QueryEventsResponse
	5,  // 28: audit.v1.AuditService.GetUserActivity:output_type -> audit.v1.UserActivityResponse
	7,  // 29: audit.v1.AuditService.GetComplianceReport:output_type -> audit.v1.ComplianceReportResponse
	9,  // 30: audit.v1.AuditService.HealthCheck:output_type -> audit.v1.HealthCheckResponse
	26, // [26:31] is the sub-list for method output_type
	21, // [21:26] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_api_audit_proto_init() }
func file_api_audit_proto_init() {
	if File_api_audit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_audit_proto_rawDesc), len(file_api_audit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_audit_proto_goTypes,
		DependencyIndexes: file_api_audit_proto_depIdxs,
		MessageInfos:      file_api_audit_proto_msgTypes,
	}.Build()
	File_api_audit_proto = out.File
	file_api_audit_proto_goTypes = nil
	file_api_audit_proto_depIdxs = nil
}
